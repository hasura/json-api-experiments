/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/authors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Query authors collection with filtering, sorting, pagination capabilities.
         * @description Authors select many description.
         */
        get: operations["GetAuthorsAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/articles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Query articles collection with filtering, sorting, pagination capabilities.
         * @description Articles select many description.
         */
        get: operations["GetArticlesAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthorFilterExp: {
            $and?: components["schemas"]["AuthorFilterExp"][];
            $or?: components["schemas"]["AuthorFilterExp"][];
            $not?: components["schemas"]["AuthorFilterExp"];
            author_id?: {
                $eq: number;
            } | {
                $neq: number;
            } | {
                $gt: number;
            } | {
                $lt: number;
            } | {
                $gte: number;
            } | {
                $lte: number;
            };
            name?: {
                $eq: string;
            } | {
                $neq: string;
            } | {
                $gt: string;
            } | {
                $lt: string;
            } | {
                $gte: string;
            } | {
                $lte: string;
            };
        };
        AuthorSortExp: {
            /** @enum {string} */
            author_id?: "Asc" | "Desc";
            /** @enum {string} */
            name?: "Asc" | "Desc";
        };
        Page: {
            "[limit]"?: number;
            "[offset]"?: number;
        };
        Author: {
            author_id: number;
            name: string;
        };
        ArticleFilterExp: {
            $and?: components["schemas"]["ArticleFilterExp"][];
            $or?: components["schemas"]["ArticleFilterExp"][];
            $not?: components["schemas"]["ArticleFilterExp"];
            article_id?: {
                $eq: number;
            } | {
                $neq: number;
            } | {
                $gt: number;
            } | {
                $lt: number;
            } | {
                $gte: number;
            } | {
                $lte: number;
            };
            title?: {
                $eq: string;
            } | {
                $neq: string;
            } | {
                $gt: string;
            } | {
                $lt: string;
            } | {
                $gte: string;
            } | {
                $lte: string;
            };
            created?: {
                /** Format: date-time */
                $eq: string;
            } | {
                /** Format: date-time */
                $neq: string;
            } | {
                /** Format: date-time */
                $gt: string;
            } | {
                /** Format: date-time */
                $lt: string;
            } | {
                /** Format: date-time */
                $gte: string;
            } | {
                /** Format: date-time */
                $lte: string;
            };
            author_id?: {
                $eq: number;
            } | {
                $neq: number;
            } | {
                $gt: number;
            } | {
                $lt: number;
            } | {
                $gte: number;
            } | {
                $lte: number;
            };
        };
        ArticleSortExp: {
            /** @enum {string} */
            name?: "Asc" | "Desc";
            /** @enum {string} */
            article_id?: "Asc" | "Desc";
            /** @enum {string} */
            title?: "Asc" | "Desc";
            /** @enum {string} */
            created?: "Asc" | "Desc";
            /** @enum {string} */
            author_id?: "Asc" | "Desc";
        };
        Article: {
            article_id: number;
            title: string;
            /** Format: date-time */
            created: string;
            author_id: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetAuthorsAPI: {
        parameters: {
            query?: {
                filter?: components["schemas"]["AuthorFilterExp"];
                sort?: components["schemas"]["AuthorSortExp"];
                page?: components["schemas"]["Page"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Author"][];
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @enum {boolean} */
                        success: false;
                    };
                };
            };
        };
    };
    GetArticlesAPI: {
        parameters: {
            query?: {
                filter?: components["schemas"]["ArticleFilterExp"];
                sort?: components["schemas"]["ArticleSortExp"];
                page?: components["schemas"]["Page"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Article"][];
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        /** @enum {boolean} */
                        success: false;
                    };
                };
            };
        };
    };
}
